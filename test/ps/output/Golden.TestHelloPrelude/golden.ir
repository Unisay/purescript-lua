UberModule
  { uberModuleBindings =
    [ Standalone
      ( QName
        { qnameModuleName = ModuleName "Control.Apply", qnameName = Name "apply" }, Abs
        ( ParamNamed ( Name "dict" ) )
        ( ObjectProp ( Ref ( Local ( Name "dict" ) ) ( 0 ) ) ( PropName "apply" ) )
      ), Standalone
      ( QName
        { qnameModuleName = ModuleName "Control.Applicative", qnameName = Name "pure" }, Abs
        ( ParamNamed ( Name "dict" ) )
        ( ObjectProp ( Ref ( Local ( Name "dict" ) ) ( 0 ) ) ( PropName "pure" ) )
      ), Standalone
      ( QName
        { qnameModuleName = ModuleName "Control.Applicative", qnameName = Name "liftA1" }, Abs
        ( ParamNamed ( Name "dictApplicative" ) )
        ( Abs
          ( ParamNamed ( Name "f" ) )
          ( Abs
            ( ParamNamed ( Name "a" ) )
            ( App
              ( App
                ( App
                  ( Ref ( Imported ( ModuleName "Control.Apply" ) ( Name "apply" ) ) ( 0 ) )
                  ( App
                    ( ObjectProp
                      ( Ref ( Local ( Name "dictApplicative" ) ) ( 0 ) )
                      ( PropName "Apply0" )
                    )
                    ( Ref ( Imported ( ModuleName "Prim" ) ( Name "undefined" ) ) ( 0 ) )
                  )
                )
                ( App
                  ( App
                    ( Ref ( Imported ( ModuleName "Control.Applicative" ) ( Name "pure" ) ) ( 0 ) )
                    ( Ref ( Local ( Name "dictApplicative" ) ) ( 0 ) )
                  )
                  ( Ref ( Local ( Name "f" ) ) ( 0 ) )
                )
              )
              ( Ref ( Local ( Name "a" ) ) ( 0 ) )
            )
          )
        )
      ), Standalone
      ( QName
        { qnameModuleName = ModuleName "Control.Bind", qnameName = Name "bind" }, Abs
        ( ParamNamed ( Name "dict" ) )
        ( ObjectProp ( Ref ( Local ( Name "dict" ) ) ( 0 ) ) ( PropName "bind" ) )
      ), Standalone
      ( QName
        { qnameModuleName = ModuleName "Control.Monad", qnameName = Name "ap" }, Abs
        ( ParamNamed ( Name "dictMonad" ) )
        ( Let
          ( Standalone
            ( Name "bind", App
              ( Ref ( Imported ( ModuleName "Control.Bind" ) ( Name "bind" ) ) ( 0 ) )
              ( App
                ( ObjectProp ( Ref ( Local ( Name "dictMonad" ) ) ( 0 ) ) ( PropName "Bind1" ) )
                ( Ref ( Imported ( ModuleName "Prim" ) ( Name "undefined" ) ) ( 0 ) )
              )
            ) :| []
          )
          ( Abs
            ( ParamNamed ( Name "f" ) )
            ( Abs
              ( ParamNamed ( Name "a" ) )
              ( App
                ( App
                  ( Ref ( Local ( Name "bind" ) ) ( 0 ) )
                  ( Ref ( Local ( Name "f" ) ) ( 0 ) )
                )
                ( Abs
                  ( ParamNamed ( Name "f'" ) )
                  ( App
                    ( App
                      ( Ref ( Local ( Name "bind" ) ) ( 0 ) )
                      ( Ref ( Local ( Name "a" ) ) ( 0 ) )
                    )
                    ( Abs
                      ( ParamNamed ( Name "a'" ) )
                      ( App
                        ( App
                          ( Ref
                            ( Imported ( ModuleName "Control.Applicative" ) ( Name "pure" ) ) ( 0 )
                          )
                          ( App
                            ( ObjectProp
                              ( Ref ( Local ( Name "dictMonad" ) ) ( 0 ) )
                              ( PropName "Applicative0" )
                            )
                            ( Ref ( Imported ( ModuleName "Prim" ) ( Name "undefined" ) ) ( 0 ) )
                          )
                        )
                        ( App
                          ( Ref ( Local ( Name "f'" ) ) ( 0 ) )
                          ( Ref ( Local ( Name "a'" ) ) ( 0 ) )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      ), Standalone
      ( QName
        { qnameModuleName = ModuleName "Prelude", qnameName = Name "pass" }, Abs
        ( ParamNamed ( Name "dictApplicative" ) )
        ( App
          ( App
            ( Ref ( Imported ( ModuleName "Control.Applicative" ) ( Name "pure" ) ) ( 0 ) )
            ( Ref ( Local ( Name "dictApplicative" ) ) ( 0 ) )
          )
          ( Ref ( Imported ( ModuleName "Data.Unit" ) ( Name "unit" ) ) ( 0 ) )
        )
      ), RecursiveGroup
      (
        ( QName
          { qnameModuleName = ModuleName "Effect", qnameName = Name "monadEffect" }, Lit
          ( Object
            [
              ( PropName "Applicative0", Abs ( ParamUnused )
                ( Ref ( Imported ( ModuleName "Effect" ) ( Name "applicativeEffect" ) ) ( 0 ) )
              ),
              ( PropName "Bind1", Abs ( ParamUnused )
                ( Ref ( Imported ( ModuleName "Effect" ) ( Name "bindEffect" ) ) ( 0 ) )
              )
            ]
          )
        ) :|
        [
          ( QName
            { qnameModuleName = ModuleName "Effect", qnameName = Name "bindEffect" }, Lit
            ( Object
              [
                ( PropName "bind", Ref
                  ( Imported ( ModuleName "Effect" ) ( Name "bindE" ) ) ( 0 )
                ),
                ( PropName "Apply0", Abs ( ParamUnused )
                  ( App
                    ( Ref
                      ( Imported ( ModuleName "Effect" ) ( Name "$__lazy_applyEffect" ) ) ( 0 )
                    )
                    ( Lit ( Integer 0 ) )
                  )
                )
              ]
            )
          ),
          ( QName
            { qnameModuleName = ModuleName "Effect", qnameName = Name "applicativeEffect" }, Lit
            ( Object
              [
                ( PropName "pure", Ref
                  ( Imported ( ModuleName "Effect" ) ( Name "pureE" ) ) ( 0 )
                ),
                ( PropName "Apply0", Abs ( ParamUnused )
                  ( App
                    ( Ref
                      ( Imported ( ModuleName "Effect" ) ( Name "$__lazy_applyEffect" ) ) ( 0 )
                    )
                    ( Lit ( Integer 0 ) )
                  )
                )
              ]
            )
          ),
          ( QName
            { qnameModuleName = ModuleName "Effect", qnameName = Name "$__lazy_functorEffect"
            }, App
            ( App
              ( Ref ( Local ( Name "$__runtime_lazy" ) ) ( 0 ) )
              ( Lit ( String "functorEffect" ) )
            )
            ( Abs ( ParamUnused )
              ( Lit
                ( Object
                  [
                    ( PropName "map", App
                      ( Ref
                        ( Imported ( ModuleName "Control.Applicative" ) ( Name "liftA1" ) ) ( 0 )
                      )
                      ( Ref
                        ( Imported ( ModuleName "Effect" ) ( Name "applicativeEffect" ) ) ( 0 )
                      )
                    )
                  ]
                )
              )
            )
          ),
          ( QName
            { qnameModuleName = ModuleName "Effect", qnameName = Name "$__lazy_applyEffect" }, App
            ( App
              ( Ref ( Local ( Name "$__runtime_lazy" ) ) ( 0 ) )
              ( Lit ( String "applyEffect" ) )
            )
            ( Abs ( ParamUnused )
              ( Lit
                ( Object
                  [
                    ( PropName "apply", App
                      ( Ref ( Imported ( ModuleName "Control.Monad" ) ( Name "ap" ) ) ( 0 ) )
                      ( Ref ( Imported ( ModuleName "Effect" ) ( Name "monadEffect" ) ) ( 0 ) )
                    ),
                    ( PropName "Functor0", Abs ( ParamUnused )
                      ( App
                        ( Ref
                          ( Imported
                            ( ModuleName "Effect" )
                            ( Name "$__lazy_functorEffect" )
                          ) ( 0 )
                        )
                        ( Lit ( Integer 0 ) )
                      )
                    )
                  ]
                )
              )
            )
          ),
          ( QName
            { qnameModuleName = ModuleName "Effect", qnameName = Name "functorEffect" }, App
            ( Ref ( Imported ( ModuleName "Effect" ) ( Name "$__lazy_functorEffect" ) ) ( 0 ) )
            ( Lit ( Integer 0 ) )
          ),
          ( QName
            { qnameModuleName = ModuleName "Effect", qnameName = Name "applyEffect" }, App
            ( Ref ( Imported ( ModuleName "Effect" ) ( Name "$__lazy_applyEffect" ) ) ( 0 ) )
            ( Lit ( Integer 0 ) )
          )
        ]
      ), Standalone
      ( QName
        { qnameModuleName = ModuleName "Golden.TestHelloPrelude", qnameName = Name "main" }, App
        ( Ref ( Imported ( ModuleName "Prelude" ) ( Name "pass" ) ) ( 0 ) )
        ( Ref ( Imported ( ModuleName "Effect" ) ( Name "applicativeEffect" ) ) ( 0 ) )
      )
    ], uberModuleForeigns =
    [
      ( ModuleName "Data.Unit", ".spago/lua-prelude/v6.0.2/src/Data/Unit.purs", Name "unit" :| []
      ),
      ( ModuleName "Effect", ".spago/lua-effect/v4.0.0/src/Effect.purs", Name "bindE" :|
        [ Name "pureE" ]
      )
    ], uberModuleExports =
    [ ( ModuleName "Golden.TestHelloPrelude", Name "main" ) ]
  }