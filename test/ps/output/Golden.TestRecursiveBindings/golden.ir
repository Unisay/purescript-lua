UberModule
  { uberModuleBindings = [], uberModuleExports =
    [
      ( Name "letRec", Let
        ( RecursiveGroup
          (
            ( Identity
              ( Name "no" ), Identity
              ( Abs
                ( Identity ( ParamNamed ( Name "v" ) ) )
                ( Identity
                  ( IfThenElse
                    ( Identity
                      ( Eq
                        ( Identity ( LiteralBool True ) )
                        ( Identity ( Ref ( Local ( Name "v" ) ) 0 ) )
                      )
                    )
                    ( Identity
                      ( App
                        ( Identity ( Ref ( Local ( Name "yes" ) ) 0 ) )
                        ( Identity ( LiteralBool False ) )
                      )
                    )
                    ( Identity
                      ( IfThenElse
                        ( Identity
                          ( Eq
                            ( Identity ( LiteralBool False ) )
                            ( Identity ( Ref ( Local ( Name "v" ) ) 0 ) )
                          )
                        )
                        ( Identity
                          ( App
                            ( Identity ( Ref ( Local ( Name "yes" ) ) 0 ) )
                            ( Identity ( LiteralBool True ) )
                          )
                        )
                        ( Identity ( Exception "No patterns matched" ) )
                      )
                    )
                  )
                )
              )
            ) :|
            [
              ( Identity
                ( Name "yes" ), Identity
                ( Abs
                  ( Identity ( ParamNamed ( Name "v" ) ) )
                  ( Identity
                    ( IfThenElse
                      ( Identity
                        ( Eq
                          ( Identity ( LiteralBool True ) )
                          ( Identity ( Ref ( Local ( Name "v" ) ) 0 ) )
                        )
                      )
                      ( Identity
                        ( App
                          ( Identity ( Ref ( Local ( Name "no" ) ) 0 ) )
                          ( Identity ( LiteralBool False ) )
                        )
                      )
                      ( Identity
                        ( IfThenElse
                          ( Identity
                            ( Eq
                              ( Identity ( LiteralBool False ) )
                              ( Identity ( Ref ( Local ( Name "v" ) ) 0 ) )
                            )
                          )
                          ( Identity
                            ( App
                              ( Identity ( Ref ( Local ( Name "no" ) ) 0 ) )
                              ( Identity ( LiteralBool True ) )
                            )
                          )
                          ( Identity ( Exception "No patterns matched" ) )
                        )
                      )
                    )
                  )
                )
              )
            ]
          ) :| []
        )
        ( Identity
          ( App ( Identity ( Ref ( Local ( Name "no" ) ) 0 ) ) ( Identity ( LiteralBool False ) ) )
        )
      ),
      ( Name "whereRec", Let
        ( RecursiveGroup
          (
            ( Identity
              ( Name "no" ), Identity
              ( Abs
                ( Identity ( ParamNamed ( Name "v" ) ) )
                ( Identity
                  ( IfThenElse
                    ( Identity
                      ( Eq
                        ( Identity ( LiteralBool True ) )
                        ( Identity ( Ref ( Local ( Name "v" ) ) 0 ) )
                      )
                    )
                    ( Identity
                      ( App
                        ( Identity ( Ref ( Local ( Name "yes" ) ) 0 ) )
                        ( Identity ( LiteralBool False ) )
                      )
                    )
                    ( Identity
                      ( IfThenElse
                        ( Identity
                          ( Eq
                            ( Identity ( LiteralBool False ) )
                            ( Identity ( Ref ( Local ( Name "v" ) ) 0 ) )
                          )
                        )
                        ( Identity
                          ( App
                            ( Identity ( Ref ( Local ( Name "yes" ) ) 0 ) )
                            ( Identity ( LiteralBool True ) )
                          )
                        )
                        ( Identity ( Exception "No patterns matched" ) )
                      )
                    )
                  )
                )
              )
            ) :|
            [
              ( Identity
                ( Name "yes" ), Identity
                ( Abs
                  ( Identity ( ParamNamed ( Name "v" ) ) )
                  ( Identity
                    ( IfThenElse
                      ( Identity
                        ( Eq
                          ( Identity ( LiteralBool True ) )
                          ( Identity ( Ref ( Local ( Name "v" ) ) 0 ) )
                        )
                      )
                      ( Identity
                        ( App
                          ( Identity ( Ref ( Local ( Name "no" ) ) 0 ) )
                          ( Identity ( LiteralBool False ) )
                        )
                      )
                      ( Identity
                        ( IfThenElse
                          ( Identity
                            ( Eq
                              ( Identity ( LiteralBool False ) )
                              ( Identity ( Ref ( Local ( Name "v" ) ) 0 ) )
                            )
                          )
                          ( Identity
                            ( App
                              ( Identity ( Ref ( Local ( Name "no" ) ) 0 ) )
                              ( Identity ( LiteralBool True ) )
                            )
                          )
                          ( Identity ( Exception "No patterns matched" ) )
                        )
                      )
                    )
                  )
                )
              )
            ]
          ) :| []
        )
        ( Identity
          ( App ( Identity ( Ref ( Local ( Name "no" ) ) 0 ) ) ( Identity ( LiteralBool False ) ) )
        )
      ),
      ( Name "letRecMixed", Let
        ( Standalone
          ( Identity ( Name "z" ), Identity ( LiteralInt 1 ) ) :|
          [ RecursiveGroup
            (
              ( Identity
                ( Name "a" ), Identity
                ( Abs ( Identity ParamUnused )
                  ( Identity
                    ( App
                      ( Identity ( Ref ( Local ( Name "b" ) ) 0 ) )
                      ( Identity ( Ref ( Local ( Name "z" ) ) 0 ) )
                    )
                  )
                )
              ) :|
              [
                ( Identity
                  ( Name "b" ), Identity
                  ( Abs ( Identity ParamUnused )
                    ( Identity
                      ( App
                        ( Identity ( Ref ( Local ( Name "a" ) ) 0 ) )
                        ( Identity ( Ref ( Local ( Name "z" ) ) 0 ) )
                      )
                    )
                  )
                )
              ]
            ), Standalone
            ( Identity
              ( Name "f" ), Identity
              ( Abs ( Identity ParamUnused )
                ( Identity
                  ( Abs
                    ( Identity ( ParamNamed ( Name "k" ) ) )
                    ( Identity
                      ( App
                        ( Identity ( Ref ( Local ( Name "a" ) ) 0 ) )
                        ( Identity ( Ref ( Local ( Name "k" ) ) 0 ) )
                      )
                    )
                  )
                )
              )
            ), Standalone
            ( Identity
              ( Name "y" ), Identity
              ( App
                ( Identity
                  ( App
                    ( Identity ( Ref ( Local ( Name "f" ) ) 0 ) )
                    ( Identity ( Ref ( Local ( Name "z" ) ) 0 ) )
                  )
                )
                ( Identity ( Ref ( Local ( Name "z" ) ) 0 ) )
              )
            )
          ]
        )
        ( Identity
          ( App
            ( Identity
              ( App
                ( Identity ( Ref ( Local ( Name "f" ) ) 0 ) )
                ( Identity
                  ( App
                    ( Identity
                      ( App
                        ( Identity ( Ref ( Local ( Name "f" ) ) 0 ) )
                        ( Identity ( Ref ( Local ( Name "y" ) ) 0 ) )
                      )
                    )
                    ( Identity ( Ref ( Local ( Name "y" ) ) 0 ) )
                  )
                )
              )
            )
            ( Identity
              ( App
                ( Identity
                  ( App
                    ( Identity ( Ref ( Local ( Name "f" ) ) 0 ) )
                    ( Identity ( Ref ( Local ( Name "y" ) ) 0 ) )
                  )
                )
                ( Identity ( LiteralInt 0 ) )
              )
            )
          )
        )
      )
    ]
  }