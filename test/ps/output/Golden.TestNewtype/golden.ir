[Module
   {moduleName = ModuleName "Golden.TestNewtype",
    moduleBindings =
      [Standalone
         (Name "NT",
          Abs
            (AbsBinding
               (ArgNamed (Name "x"))
               (LocallyNameless
                  {unLocallyNameless =
                     RefBound (Index {level = 0, offset = 0})}))),
       Standalone (Name "g", RefFree (Local (Name "NT"))),
       Standalone
         (Name "f",
          Abs
            (AbsBinding
               (ArgNamed (Name "v"))
               (LocallyNameless
                  {unLocallyNameless =
                     Let
                       (LetBinding
                          (Standalone
                             (Name "n",
                              LocallyNameless
                                {unLocallyNameless =
                                   RefBound (Index {level = 1, offset = 0})})
                             :|
                             [])
                          (LocallyNameless
                             {unLocallyNameless =
                                ObjectProp
                                  RefBound
                                  (Index {level = 0, offset = 0})
                                  (PropName "foo")}))})))],
    moduleImports = [],
    moduleExports = [Name "NT", Name "f", Name "g"],
    moduleReExports = fromList [],
    moduleForeigns = [],
    modulePath = "golden/Golden/TestNewtype.purs",
    dataTypes = fromList []}]
